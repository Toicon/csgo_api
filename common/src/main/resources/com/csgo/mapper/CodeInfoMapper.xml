<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.csgo.mapper.CodeInfoMapper">
    <resultMap id="BaseResultMap" type="com.csgo.domain.CodeInfo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="holder" property="holder" jdbcType="VARCHAR"/>
        <result column="remarks" property="remarks" jdbcType="VARCHAR"/>
        <result column="user_num" property="userNum" jdbcType="INTEGER"/>
        <result column="pay_money" property="payMoney" jdbcType="DECIMAL"/>
        <result column="pay_money_x" property="payMoneyX" jdbcType="DECIMAL"/>
        <result column="extract" property="extract" jdbcType="DECIMAL"/>
        <result column="extract_x" property="extractX" jdbcType="DECIMAL"/>
        <result column="ct" property="ct" jdbcType="TIMESTAMP"/>
        <result column="ut" property="ut" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , code, holder, remarks, user_num, pay_money, pay_money_x, extract, extract_x,
    ct, ut
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from code_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from code_info
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.csgo.domain.CodeInfo">
        insert into code_info (id, code, holder,
                               remarks, user_num, pay_money,
                               pay_money_x, extract, extract_x,
                               ct, ut)
        values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{holder,jdbcType=VARCHAR},
                #{remarks,jdbcType=VARCHAR}, #{userNum,jdbcType=INTEGER}, #{payMoney,jdbcType=DECIMAL},
                #{payMoneyX,jdbcType=DECIMAL}, #{extract,jdbcType=DECIMAL}, #{extractX,jdbcType=DECIMAL},
                #{ct,jdbcType=TIMESTAMP}, #{ut,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.csgo.domain.CodeInfo">
        insert into code_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="holder != null">
                holder,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
            <if test="userNum != null">
                user_num,
            </if>
            <if test="payMoney != null">
                pay_money,
            </if>
            <if test="payMoneyX != null">
                pay_money_x,
            </if>
            <if test="extract != null">
                extract,
            </if>
            <if test="extractX != null">
                extract_x,
            </if>
            <if test="ct != null">
                ct,
            </if>
            <if test="ut != null">
                ut,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="holder != null">
                #{holder,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="userNum != null">
                #{userNum,jdbcType=INTEGER},
            </if>
            <if test="payMoney != null">
                #{payMoney,jdbcType=DECIMAL},
            </if>
            <if test="payMoneyX != null">
                #{payMoneyX,jdbcType=DECIMAL},
            </if>
            <if test="extract != null">
                #{extract,jdbcType=DECIMAL},
            </if>
            <if test="extractX != null">
                #{extractX,jdbcType=DECIMAL},
            </if>
            <if test="ct != null">
                #{ct,jdbcType=TIMESTAMP},
            </if>
            <if test="ut != null">
                #{ut,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.csgo.domain.CodeInfo">
        update code_info
        <set>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="holder != null">
                holder = #{holder,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="userNum != null">
                user_num = #{userNum,jdbcType=INTEGER},
            </if>
            <if test="payMoney != null">
                pay_money = #{payMoney,jdbcType=DECIMAL},
            </if>
            <if test="payMoneyX != null">
                pay_money_x = #{payMoneyX,jdbcType=DECIMAL},
            </if>
            <if test="extract != null">
                extract = #{extract,jdbcType=DECIMAL},
            </if>
            <if test="extractX != null">
                extract_x = #{extractX,jdbcType=DECIMAL},
            </if>
            <if test="ct != null">
                ct = #{ct,jdbcType=TIMESTAMP},
            </if>
            <if test="ut != null">
                ut = #{ut,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.csgo.domain.CodeInfo">
        update code_info
        set code        = #{code,jdbcType=VARCHAR},
            holder      = #{holder,jdbcType=VARCHAR},
            remarks     = #{remarks,jdbcType=VARCHAR},
            user_num    = #{userNum,jdbcType=INTEGER},
            pay_money   = #{payMoney,jdbcType=DECIMAL},
            pay_money_x = #{payMoneyX,jdbcType=DECIMAL},
            extract     = #{extract,jdbcType=DECIMAL},
            extract_x   = #{extractX,jdbcType=DECIMAL},
            ct          = #{ct,jdbcType=TIMESTAMP},
            ut          = #{ut,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="getList" parameterType="com.csgo.domain.CodeInfo" resultMap="BaseResultMap">
        select * from code_info
        <where>
            <if test="code != null">
                and code = #{code,jdbcType=VARCHAR}
            </if>
            <if test="holder != null">
                and holder = #{holder,jdbcType=VARCHAR}
            </if>
            <if test="remarks != null">
                and remarks = #{remarks,jdbcType=VARCHAR}
            </if>
            <if test="userNum != null">
                and user_num = #{userNum,jdbcType=INTEGER}
            </if>
            <if test="payMoney != null">
                and pay_money = #{payMoney,jdbcType=DECIMAL}
            </if>
            <if test="payMoneyX != null">
                and pay_money_x = #{payMoneyX,jdbcType=DECIMAL}
            </if>
            <if test="extract != null">
                and extract = #{extract,jdbcType=DECIMAL}
            </if>
            <if test="extractX != null">
                and extract_x = #{extractX,jdbcType=DECIMAL}
            </if>
            <if test="ct != null">
                and ct = #{ct,jdbcType=TIMESTAMP}
            </if>
            <if test="ut != null">
                and ut = #{ut,jdbcType=TIMESTAMP}
            </if>
        </where>
        order by ut desc,ct desc
    </select>


    <select id="getListlike" parameterType="com.csgo.domain.CodeInfo" resultMap="BaseResultMap">
        select * from code_info
        <where>
            <if test="code != null">
                and code like '%${code}%'
            </if>
            <if test="holder != null">
                and holder like '%${holder}%'
            </if>
            <if test="remarks != null">
                and remarks = #{remarks,jdbcType=VARCHAR}
            </if>
            <if test="userNum != null">
                and user_num = #{userNum,jdbcType=INTEGER}
            </if>
            <if test="payMoney != null">
                and pay_money = #{payMoney,jdbcType=DECIMAL}
            </if>
            <if test="payMoneyX != null">
                and pay_money_x = #{payMoneyX,jdbcType=DECIMAL}
            </if>
            <if test="extract != null">
                and extract = #{extract,jdbcType=DECIMAL}
            </if>
            <if test="extractX != null">
                and extract_x = #{extractX,jdbcType=DECIMAL}
            </if>
            <if test="ct != null">
                and ct = #{ct,jdbcType=TIMESTAMP}
            </if>
            <if test="ut != null">
                and ut = #{ut,jdbcType=TIMESTAMP}
            </if>
        </where>
        order by ut desc,ct desc
    </select>


</mapper>