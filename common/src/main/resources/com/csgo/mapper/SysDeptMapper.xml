<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.csgo.mapper.SysDeptMapper">

    <resultMap type="com.csgo.domain.SysDept" id="SysDeptResult">
        <id property="id" column="id"/>
        <result property="parentId" column="parent_id"/>
        <result property="ancestors" column="ancestors"/>
        <result property="deptName" column="dept_name"/>
        <result property="orderNum" column="order_num"/>
        <result property="leader" column="leader"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="status" column="status"/>
        <result property="delFlag" column="del_flag"/>
        <result property="parentName" column="parent_name"/>
        <result property="createBy" column="create_by"/>
        <result property="createDate" column="create_date"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateDate" column="update_date"/>
    </resultMap>

    <sql id="selectDeptVo">
        select d.id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone, d.email, d.status, d.del_flag, d.create_by, d.create_date 
        from sys_dept d
    </sql>

    <select id="selectDeptList" parameterType="com.csgo.domain.SysDept" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        where d.del_flag = '0'
        <if test="id != null and id != 0">
            AND id = #{id}
        </if>
        <if test="parentId != null and parentId != 0">
            AND parent_id = #{parentId}
        </if>
        <if test="deptName != null and deptName != ''">
            AND dept_name like concat('%', #{deptName}, '%')
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        <!-- 数据范围过滤 -->
        ${dataScope}
        order by d.parent_id, d.order_num
    </select>

    <select id="selectDeptListByRoleId" resultType="Integer">
        select d.id
        from sys_dept d
        left join sys_role_dept rd on d.id = rd.id
        where rd.role_id = #{roleId}
        <if test="deptCheckStrictly">
            and d.id not in (select d.parent_id from sys_dept d inner join sys_role_dept rd on d.id =
            rd.id and rd.role_id = #{roleId})
        </if>
        order by d.parent_id, d.order_num
    </select>

    <select id="selectDeptById" parameterType="Integer" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        where id = #{id}
    </select>

    <select id="checkDeptExistUser" parameterType="Integer" resultType="int">
		select count(1) from admin_user where dept_id = #{id}
	</select>

    <select id="hasChildByDeptId" parameterType="Integer" resultType="int">
		select count(1) from sys_dept
		where del_flag = '0' and parent_id = #{id} limit 1
	</select>

    <select id="selectChildrenDeptById" parameterType="Integer" resultMap="SysDeptResult">
		select * from sys_dept where find_in_set(#{id}, ancestors)
	</select>

    <select id="selectNormalChildrenDeptById" parameterType="Integer" resultType="int">
		select count(*) from sys_dept where status = 0 and del_flag = '0' and find_in_set(#{id}, ancestors)
	</select>

    <select id="checkDeptNameUnique" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        where dept_name=#{deptName} and parent_id = #{parentId} and del_flag = '0' limit 1
    </select>

    <insert id="insertDept" parameterType="com.csgo.domain.SysDept">
        insert into sys_dept(
        <if test="id != null and id != 0">id,</if>
        <if test="parentId != null and parentId != 0">parent_id,</if>
        <if test="deptName != null and deptName != ''">dept_name,</if>
        <if test="ancestors != null and ancestors != ''">ancestors,</if>
        <if test="orderNum != null">order_num,</if>
        <if test="leader != null and leader != ''">leader,</if>
        <if test="phone != null and phone != ''">phone,</if>
        <if test="email != null and email != ''">email,</if>
        <if test="status != null">status,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        create_date
        )values(
        <if test="id != null and id != 0">#{id},</if>
        <if test="parentId != null and parentId != 0">#{parentId},</if>
        <if test="deptName != null and deptName != ''">#{deptName},</if>
        <if test="ancestors != null and ancestors != ''">#{ancestors},</if>
        <if test="orderNum != null">#{orderNum},</if>
        <if test="leader != null and leader != ''">#{leader},</if>
        <if test="phone != null and phone != ''">#{phone},</if>
        <if test="email != null and email != ''">#{email},</if>
        <if test="status != null">#{status},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        sysdate()
        )
    </insert>

    <update id="updateDept" parameterType="com.csgo.domain.SysDept">
        update sys_dept
        <set>
            <if test="parentId != null and parentId != 0">parent_id = #{parentId},</if>
            <if test="deptName != null and deptName != ''">dept_name = #{deptName},</if>
            <if test="ancestors != null and ancestors != ''">ancestors = #{ancestors},</if>
            <if test="orderNum != null">order_num = #{orderNum},</if>
            <if test="leader != null">leader = #{leader},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_date = sysdate()
        </set>
        where id = #{id}
    </update>

    <update id="updateDeptChildren" parameterType="java.util.List">
        update sys_dept set ancestors =
        <foreach collection="depts" item="item" index="index"
                 separator=" " open="case id" close="end">
            when #{item.id} then #{item.ancestors}
        </foreach>
        where id in
        <foreach collection="depts" item="item" index="index"
                 separator="," open="(" close=")">
            #{item.id}
        </foreach>
    </update>

    <update id="updateDeptStatusNormal" parameterType="Integer">
        update sys_dept set status = '0' where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <delete id="deleteDeptById" parameterType="Integer">
		update sys_dept set del_flag = '2' where id = #{id}
	</delete>

    <select id="selectDeptListInDeptIds" parameterType="Integer" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        where d.del_flag = '0'
        and id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

</mapper> 